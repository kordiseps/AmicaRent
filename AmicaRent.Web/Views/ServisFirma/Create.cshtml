@model AmicaRent.DataAccess.ServisFirma

@{ ViewBag.Title = "Yeni Servis Firma"; }


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-xs-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Servis Tanımlama</h3>
                </div>

                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServisFirma_Adi, "Servis Adı", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ServisFirma_Adi, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ServisFirma_Adi, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>





            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">İletişim Bilgileri</h3>
                </div>

                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServisFirma_Yetkili, "Yetkili Kişi Ad Soyadı", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ServisFirma_Yetkili, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ServisFirma_Yetkili, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServisFirma_Adres1, "Adres - 1", htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.ServisFirma_Adres1, 4, 4, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ServisFirma_Adres1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServisFirma_Adres2, "Adres - 2", htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.ServisFirma_Adres2, 4, 4, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ServisFirma_Adres2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServisFirma_Tel1, "Telefon 1", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ServisFirma_Tel1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ServisFirma_Tel1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServisFirma_Tel2, "Telefon 2", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ServisFirma_Tel2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ServisFirma_Tel2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ServisFirma_Email, "Email", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ServisFirma_Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ServisFirma_Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>





            </div>
        </div>
    </div>

    <div class="form-horizontal">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Servis Firma</h3>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            

            <div class="box-footer">
                <button type="submit" class="btn btn-primary">Onayla</button>
            </div>
        </div>
    </div>}

<div>
    @Html.ActionLink("Listeye Geri Dön ", "Index")
</div>

<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        var menuItem = document.querySelector('#solmenu-service');
        menuItem.classList.add('active');
        var subMenuItem = menuItem.querySelector('#solmenu-service-tanim-ServisFirma');
        subMenuItem.classList.add('active');
    });
</script>